{"ast":null,"code":"var _jsxFileName = \"/Users/ashrafzhonkurbonaliev/Documents/Ironhack/module-3/classEx/expense-tracker-react/client/src/context/GlobalState.js\";\nimport React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\nimport axios from 'axios'; //Initial state\n\nconst initialState = {\n  transactions: [// { id: 1, text: 'Flower', amount: -20 },\n    // { id: 2, text: 'Salary', amount: 300 },\n    // { id: 3, text: 'Book', amount: -10 },\n    // { id: 4, text: 'Camera', amount: 150 },\n  ],\n  error: null,\n  loading: true\n}; //Create context\n\nexport const GlobalContext = createContext(initialState); //Provider component\n\nexport const GlobalProvider = ({\n  children\n}) => {\n  const [state, callAppReducer] = useReducer(AppReducer, initialState); //-------------actions ---------------\n\n  function getTransactions() {\n    axios.get('/transactions').then(resFromDB => {\n      console.log('resFromDB', resFromDB);\n      callAppReducer({\n        callType: 'GET_TRANSACTIONS',\n        data: resFromDB.transactions\n      });\n    }).catch(err => {\n      callAppReducer({\n        callType: 'TRANSACTION_ERROR',\n        data: err\n      });\n    });\n  } //delete\n\n\n  function deleteTransaction(id) {\n    callAppReducer({\n      callType: 'DELETE_TRANSACTION',\n      data: id\n    });\n  } //add\n\n\n  function addTransaction(transaction) {\n    callAppReducer({\n      callType: 'ADD_TRANSACTION',\n      data: transaction\n    });\n  }\n\n  return React.createElement(GlobalContext.Provider, {\n    value: {\n      transactions: state.transactions,\n      error: state.error,\n      loading: state.loading,\n      getTransactions,\n      deleteTransaction,\n      addTransaction\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, children);\n};","map":{"version":3,"sources":["/Users/ashrafzhonkurbonaliev/Documents/Ironhack/module-3/classEx/expense-tracker-react/client/src/context/GlobalState.js"],"names":["React","createContext","useReducer","AppReducer","axios","initialState","transactions","error","loading","GlobalContext","GlobalProvider","children","state","callAppReducer","getTransactions","get","then","resFromDB","console","log","callType","data","catch","err","deleteTransaction","id","addTransaction","transaction"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,YAAY,EAAE,CACZ;AACA;AACA;AACA;AAJY,GADK;AAOnBC,EAAAA,KAAK,EAAE,IAPY;AAQnBC,EAAAA,OAAO,EAAE;AARU,CAArB,C,CAWA;;AACA,OAAO,MAAMC,aAAa,GAAGR,aAAa,CAACI,YAAD,CAAnC,C,CAEP;;AACA,OAAO,MAAMK,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC9C,QAAM,CAACC,KAAD,EAAQC,cAAR,IAA0BX,UAAU,CAACC,UAAD,EAAaE,YAAb,CAA1C,CAD8C,CAG9C;;AAEA,WAASS,eAAT,GAA2B;AACzBV,IAAAA,KAAK,CACFW,GADH,CACO,eADP,EAEGC,IAFH,CAEQC,SAAS,IAAI;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,SAAzB;AACAJ,MAAAA,cAAc,CAAC;AACbO,QAAAA,QAAQ,EAAE,kBADG;AAEbC,QAAAA,IAAI,EAAEJ,SAAS,CAACX;AAFH,OAAD,CAAd;AAID,KARH,EASGgB,KATH,CASSC,GAAG,IAAI;AACZV,MAAAA,cAAc,CAAC;AACbO,QAAAA,QAAQ,EAAE,mBADG;AAEbC,QAAAA,IAAI,EAAEE;AAFO,OAAD,CAAd;AAID,KAdH;AAeD,GArB6C,CAsB9C;;;AACA,WAASC,iBAAT,CAA2BC,EAA3B,EAA+B;AAC7BZ,IAAAA,cAAc,CAAC;AACbO,MAAAA,QAAQ,EAAE,oBADG;AAEbC,MAAAA,IAAI,EAAEI;AAFO,KAAD,CAAd;AAID,GA5B6C,CA6B9C;;;AACA,WAASC,cAAT,CAAwBC,WAAxB,EAAqC;AACnCd,IAAAA,cAAc,CAAC;AACbO,MAAAA,QAAQ,EAAE,iBADG;AAEbC,MAAAA,IAAI,EAAEM;AAFO,KAAD,CAAd;AAID;;AAED,SACE,oBAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLrB,MAAAA,YAAY,EAAEM,KAAK,CAACN,YADf;AAELC,MAAAA,KAAK,EAAEK,KAAK,CAACL,KAFR;AAGLC,MAAAA,OAAO,EAAEI,KAAK,CAACJ,OAHV;AAILM,MAAAA,eAJK;AAKLU,MAAAA,iBALK;AAMLE,MAAAA;AANK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGf,QAVH,CADF;AAcD,CAnDM","sourcesContent":["import React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\nimport axios from 'axios';\n\n//Initial state\nconst initialState = {\n  transactions: [\n    // { id: 1, text: 'Flower', amount: -20 },\n    // { id: 2, text: 'Salary', amount: 300 },\n    // { id: 3, text: 'Book', amount: -10 },\n    // { id: 4, text: 'Camera', amount: 150 },\n  ],\n  error: null,\n  loading: true,\n};\n\n//Create context\nexport const GlobalContext = createContext(initialState);\n\n//Provider component\nexport const GlobalProvider = ({ children }) => {\n  const [state, callAppReducer] = useReducer(AppReducer, initialState);\n\n  //-------------actions ---------------\n\n  function getTransactions() {\n    axios\n      .get('/transactions')\n      .then(resFromDB => {\n        console.log('resFromDB', resFromDB);\n        callAppReducer({\n          callType: 'GET_TRANSACTIONS',\n          data: resFromDB.transactions,\n        });\n      })\n      .catch(err => {\n        callAppReducer({\n          callType: 'TRANSACTION_ERROR',\n          data: err,\n        });\n      });\n  }\n  //delete\n  function deleteTransaction(id) {\n    callAppReducer({\n      callType: 'DELETE_TRANSACTION',\n      data: id,\n    });\n  }\n  //add\n  function addTransaction(transaction) {\n    callAppReducer({\n      callType: 'ADD_TRANSACTION',\n      data: transaction,\n    });\n  }\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        transactions: state.transactions,\n        error: state.error,\n        loading: state.loading,\n        getTransactions,\n        deleteTransaction,\n        addTransaction,\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}