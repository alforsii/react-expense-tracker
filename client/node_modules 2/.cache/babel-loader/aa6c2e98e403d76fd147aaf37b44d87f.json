{"ast":null,"code":"var _jsxFileName = \"/Users/ashrafzhonkurbonaliev/Documents/Ironhack/module-3/classEx/expense-tracker-react/client/src/context/GlobalState.js\";\nimport React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\nimport axios from 'axios'; //Initial state\n\nconst initialState = {\n  transactions: [// { id: 1, text: 'Flower', amount: -20 },\n    // { id: 2, text: 'Salary', amount: 300 },\n    // { id: 3, text: 'Book', amount: -10 },\n    // { id: 4, text: 'Camera', amount: 150 },\n  ],\n  error: null,\n  loading: true\n}; //Create context\n\nexport const GlobalContext = createContext(initialState); //Provider component\n\nexport const GlobalProvider = ({\n  children\n}) => {\n  const [state, callAppReducer] = useReducer(AppReducer, initialState); //-------------actions ---------------\n  // eslint-disable-next-line\n\n  function getTransactions() {\n    axios.get('/transactions').then(resFromDB => {\n      // console.log('resFromDB', resFromDB);\n      callAppReducer({\n        callType: 'GET_TRANSACTIONS',\n        idOrObj: resFromDB.data.transactions\n      });\n    }).catch(err => {\n      callAppReducer({\n        callType: 'TRANSACTION_ERROR',\n        idOrObj: err.resFromDB.data.error\n      });\n    });\n  } //delete\n\n\n  function deleteTransaction(id) {\n    callAppReducer({\n      callType: 'DELETE_TRANSACTION',\n      idOrObj: id\n    });\n  } //add\n\n\n  function addTransaction(transaction) {\n    callAppReducer({\n      callType: 'ADD_TRANSACTION',\n      idOrObj: transaction\n    });\n  }\n\n  return React.createElement(GlobalContext.Provider, {\n    value: {\n      transactions: state.transactions,\n      deleteTransaction,\n      addTransaction\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, children);\n};","map":{"version":3,"sources":["/Users/ashrafzhonkurbonaliev/Documents/Ironhack/module-3/classEx/expense-tracker-react/client/src/context/GlobalState.js"],"names":["React","createContext","useReducer","AppReducer","axios","initialState","transactions","error","loading","GlobalContext","GlobalProvider","children","state","callAppReducer","getTransactions","get","then","resFromDB","callType","idOrObj","data","catch","err","deleteTransaction","id","addTransaction","transaction"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,YAAY,EAAE,CACZ;AACA;AACA;AACA;AAJY,GADK;AAOnBC,EAAAA,KAAK,EAAE,IAPY;AAQnBC,EAAAA,OAAO,EAAE;AARU,CAArB,C,CAWA;;AACA,OAAO,MAAMC,aAAa,GAAGR,aAAa,CAACI,YAAD,CAAnC,C,CAEP;;AACA,OAAO,MAAMK,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC9C,QAAM,CAACC,KAAD,EAAQC,cAAR,IAA0BX,UAAU,CAACC,UAAD,EAAaE,YAAb,CAA1C,CAD8C,CAG9C;AACA;;AACA,WAASS,eAAT,GAA2B;AACzBV,IAAAA,KAAK,CACFW,GADH,CACO,eADP,EAEGC,IAFH,CAEQC,SAAS,IAAI;AACjB;AACAJ,MAAAA,cAAc,CAAC;AACbK,QAAAA,QAAQ,EAAE,kBADG;AAEbC,QAAAA,OAAO,EAAEF,SAAS,CAACG,IAAV,CAAed;AAFX,OAAD,CAAd;AAID,KARH,EASGe,KATH,CASSC,GAAG,IAAI;AACZT,MAAAA,cAAc,CAAC;AACbK,QAAAA,QAAQ,EAAE,mBADG;AAEbC,QAAAA,OAAO,EAAEG,GAAG,CAACL,SAAJ,CAAcG,IAAd,CAAmBb;AAFf,OAAD,CAAd;AAID,KAdH;AAeD,GArB6C,CAsB9C;;;AACA,WAASgB,iBAAT,CAA2BC,EAA3B,EAA+B;AAC7BX,IAAAA,cAAc,CAAC;AACbK,MAAAA,QAAQ,EAAE,oBADG;AAEbC,MAAAA,OAAO,EAAEK;AAFI,KAAD,CAAd;AAID,GA5B6C,CA6B9C;;;AACA,WAASC,cAAT,CAAwBC,WAAxB,EAAqC;AACnCb,IAAAA,cAAc,CAAC;AACbK,MAAAA,QAAQ,EAAE,iBADG;AAEbC,MAAAA,OAAO,EAAEO;AAFI,KAAD,CAAd;AAID;;AAED,SACE,oBAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLpB,MAAAA,YAAY,EAAEM,KAAK,CAACN,YADf;AAELiB,MAAAA,iBAFK;AAGLE,MAAAA;AAHK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGd,QAPH,CADF;AAWD,CAhDM","sourcesContent":["import React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\nimport axios from 'axios';\n\n//Initial state\nconst initialState = {\n  transactions: [\n    // { id: 1, text: 'Flower', amount: -20 },\n    // { id: 2, text: 'Salary', amount: 300 },\n    // { id: 3, text: 'Book', amount: -10 },\n    // { id: 4, text: 'Camera', amount: 150 },\n  ],\n  error: null,\n  loading: true,\n};\n\n//Create context\nexport const GlobalContext = createContext(initialState);\n\n//Provider component\nexport const GlobalProvider = ({ children }) => {\n  const [state, callAppReducer] = useReducer(AppReducer, initialState);\n\n  //-------------actions ---------------\n  // eslint-disable-next-line\n  function getTransactions() {\n    axios\n      .get('/transactions')\n      .then(resFromDB => {\n        // console.log('resFromDB', resFromDB);\n        callAppReducer({\n          callType: 'GET_TRANSACTIONS',\n          idOrObj: resFromDB.data.transactions,\n        });\n      })\n      .catch(err => {\n        callAppReducer({\n          callType: 'TRANSACTION_ERROR',\n          idOrObj: err.resFromDB.data.error,\n        });\n      });\n  }\n  //delete\n  function deleteTransaction(id) {\n    callAppReducer({\n      callType: 'DELETE_TRANSACTION',\n      idOrObj: id,\n    });\n  }\n  //add\n  function addTransaction(transaction) {\n    callAppReducer({\n      callType: 'ADD_TRANSACTION',\n      idOrObj: transaction,\n    });\n  }\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        transactions: state.transactions,\n        deleteTransaction,\n        addTransaction,\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}